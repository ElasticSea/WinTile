<Window x:Class="App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:App"
        mc:Ignorable="d"
        Icon="../../Resources/icon.png"
        Title="WinTile" Height="720" Width="1280"
        d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type=local:ViewModel}">

    <Window.Resources>
        <local:Multiplier x:Key="converter" />
        <ContextMenu x:Key="NotifierContextMenu" Placement="MousePoint">
            <MenuItem Header="Exit" Click="Menu_Exit" />
        </ContextMenu>
    </Window.Resources>

    <Border Padding="16">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="16" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>


            <GroupBox Grid.Column="0" Header="Tile Editor">
                <Border Padding="8">

                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="16" />
                            <RowDefinition Height="128" />
                            <RowDefinition Height="16" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" BorderBrush="Black" BorderThickness="1">
                            <Canvas x:Name="Canvas" />
                        </Border>
                        <FrameworkElement Grid.Row="1" />

                        <ListBox x:Name="ListView" Grid.Row="2" MaxWidth="600" SelectedItem="{Binding Selected}"
                                 SelectionMode="Single"
                                 IsSynchronizedWithCurrentItem="True"
                                 ItemsSource="{Binding Tiles}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock>
                                        <Run Text="Left:" />
                                        <Run Text="{Binding Rect.Left}" />
                                        <Run Text="Right:" />
                                        <Run Text="{Binding Rect.Right}" />
                                        <Run Text="Top:" />
                                        <Run Text="{Binding Rect.Top}" />
                                        <Run Text="Bottom:" />
                                        <Run Text="{Binding Rect.Bottom}" />
                                        <Run Text="Hotkey:" />
                                        <Run Text="{Binding Hotkey, Mode=OneWay}" />
                                    </TextBlock>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="FontWeight" Value="Bold" />
                                            <Setter Property="Background" Value="Transparent" />
                                            <Setter Property="Foreground" Value="Black" />
                                        </Trigger>
                                    </Style.Triggers>
                                    <Style.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                                                         Color="Black" />
                                        <!-- Background of selected item when focussed -->
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                                         Color="LightCyan" />
                                        <!-- Background of selected item when not focussed -->
                                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}"
                                                         Color="LightGray" />
                                    </Style.Resources>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                        <FrameworkElement Grid.Row="3" />
                        <StackPanel Grid.Row="4" MaxWidth="600">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0">
                                    <TextBlock Text="Left" />
                                    <TextBox x:Name="XTextBox" Padding="2">
                                        <Binding Path="Selected.Rect.Left" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <local:IntegerValidationRule Min="0" Max="100" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                </StackPanel>
                                <FrameworkElement Grid.Column="1" />

                                <StackPanel Grid.Column="2">
                                    <TextBlock Text="Top" />
                                    <TextBox x:Name="YTextBox" Padding="2">
                                        <Binding Path="Selected.Rect.Top" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <local:IntegerValidationRule Min="0" Max="100" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                </StackPanel>
                                <FrameworkElement Grid.Column="3" />

                                <StackPanel Grid.Column="4">
                                    <TextBlock Text="Right" />
                                    <TextBox x:Name="WidthTextBox" Padding="2">
                                        <Binding Path="Selected.Rect.Right" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <local:IntegerValidationRule Min="0" Max="100" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                </StackPanel>
                                <FrameworkElement Grid.Column="5" />

                                <StackPanel Grid.Column="6">
                                    <TextBlock Text="Bottom" />
                                    <TextBox x:Name="HeightTextBox" Padding="2">
                                        <Binding Path="Selected.Rect.Bottom" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <local:IntegerValidationRule Min="0" Max="100" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                </StackPanel>


                                <FrameworkElement Grid.Column="7" />

                                <StackPanel Grid.Column="8">
                                    <TextBlock Text="Selected Tile " />
                                    <TextBox x:Name="CurrentTile" Text="{Binding SelectedHotkey, Mode=OneWay}"
                                             PreviewKeyDown="CurrentTile_OnPreviewKeyDown" Padding="2"
                                             IsReadOnly="True" />
                                </StackPanel>

                            </Grid>

                            <FrameworkElement Height="16" />

                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" x:Name="AddWindowButton" Click="AddWindowButton_OnClick"
                                        Content="Add" />
                                <FrameworkElement Grid.Column="1" />
                                <Button Grid.Column="2" x:Name="RemoveWindowButton" Click="RemoveWindowButton_OnClick"
                                        Content="Remove" />
                                <FrameworkElement Grid.Column="3" />
                                <Button Grid.Column="4" x:Name="ReorderTileUp" Click="ReorderTileUp_OnClick"
                                        Content="Move Up" />
                                <FrameworkElement Grid.Column="5" />
                                <Button Grid.Column="6" x:Name="ReorderTileDown" Click="ReorderTileDown_OnClick"
                                        Content="Move Down" />
                                <FrameworkElement Grid.Column="6" />
                                <FrameworkElement Grid.Column="7" />
                            </Grid>
                        </StackPanel>
                    </Grid>

                </Border>
            </GroupBox>
            <FrameworkElement Grid.Column="1" />

            <StackPanel Grid.Column="2">
                <GroupBox Header="Layout">
                    <Border Padding="8">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" x:Name="ExportButton" Content="Export" Click="ExportButton_OnClick" />
                            <FrameworkElement Grid.Column="1" />
                            <Button Grid.Column="2" x:Name="ImportButton" Content="Import" Click="ImportButton_OnClick" />
                            <FrameworkElement Grid.Column="3" />
                            <Button Grid.Column="4" x:Name="SaveLayoutButton" Click="SaveLayoutButton_OnClick"
                                    Content="Save" />
                            <FrameworkElement Grid.Column="5" />
                            <Button Grid.Column="6" x:Name="ResetLayoutButton" Click="ResetLayoutButton_OnClick"
                                    Content="Reset" />
                        </Grid>
                    </Border>
                </GroupBox>

                <GroupBox Header="Hotkeys">
                    <Border Padding="8">

                        <StackPanel>

                            <GroupBox Header="Tile In Order">
                                <Border Padding="8">
                                    <StackPanel>
                                        <TextBlock Text="Previous" />
                                        <TextBox x:Name="PreTile" Text="{Binding PrevTile, Mode=OneWay}"
                                                 PreviewKeyDown="PreTile_OnPreviewKeyDown"
                                                 Padding="2" IsReadOnly="True" />
                                        <FrameworkElement Height="8" />
                                        <TextBlock Text="Next" />
                                        <TextBox x:Name="NextTile" Text="{Binding NextTile, Mode=OneWay}"
                                                 PreviewKeyDown="NextTile_OnPreviewKeyDown"
                                                 Padding="2" IsReadOnly="True" />
                                    </StackPanel>
                                </Border>
                            </GroupBox>

                            <StackPanel Orientation="Horizontal">
                                <GroupBox Header="Closest Tile" Width="200px">
                                    <Border Padding="8">
                                        <StackPanel>
                                            <TextBlock Text="Left" />
                                            <TextBox x:Name="ClosestLeft" Text="{Binding ClosestLeft, Mode=OneWay}"
                                                     PreviewKeyDown="ClosestLeft_OnPreviewKeyDown"
                                                     Padding="2" IsReadOnly="True" />
                                            <FrameworkElement Height="8" />
                                            <TextBlock Text="Right" />
                                            <TextBox x:Name="ClosestRight" Text="{Binding ClosestRight, Mode=OneWay}"
                                                     PreviewKeyDown="ClosestRight_OnPreviewKeyDown"
                                                     Padding="2" IsReadOnly="True" />
                                            <FrameworkElement Height="8" />
                                            <TextBlock Text="Up" />
                                            <TextBox x:Name="ClosestUp" Text="{Binding ClosestUp, Mode=OneWay}"
                                                     PreviewKeyDown="ClosestUp_OnPreviewKeyDown"
                                                     Padding="2" IsReadOnly="True" />
                                            <FrameworkElement Height="8" />
                                            <TextBlock Text="Down" />
                                            <TextBox x:Name="ClosestDown" Text="{Binding ClosestDown, Mode=OneWay}"
                                                     PreviewKeyDown="ClosestDown_OnPreviewKeyDown"
                                                     Padding="2" IsReadOnly="True" />
                                        </StackPanel>
                                    </Border>
                                </GroupBox>


                                <GroupBox Header="Expand Tile" Width="200px">
                                    <Border Padding="8">
                                        <StackPanel>
                                            <TextBlock Text="Left" />
                                            <TextBox x:Name="ExpandLeft" Text="{Binding ExpandLeft, Mode=OneWay}"
                                                     PreviewKeyDown="ExpandLeft_OnPreviewKeyDown"
                                                     Padding="2" IsReadOnly="True" />
                                            <FrameworkElement Height="8" />
                                            <TextBlock Text="Right" />
                                            <TextBox x:Name="ExpandRight" Text="{Binding ExpandRight, Mode=OneWay}"
                                                     PreviewKeyDown="ExpandRight_OnPreviewKeyDown"
                                                     Padding="2" IsReadOnly="True" />
                                            <FrameworkElement Height="8" />
                                            <TextBlock Text="Up" />
                                            <TextBox x:Name="ExpandUp" Text="{Binding ExpandUp, Mode=OneWay}"
                                                     PreviewKeyDown="ExpandUp_OnPreviewKeyDown"
                                                     Padding="2" IsReadOnly="True" />
                                            <FrameworkElement Height="8" />
                                            <TextBlock Text="Down" />
                                            <TextBox x:Name="ExpandDown" Text="{Binding ExpandDown, Mode=OneWay}"
                                                     PreviewKeyDown="ExpandDown_OnPreviewKeyDown"
                                                     Padding="2" IsReadOnly="True" />
                                        </StackPanel>
                                    </Border>
                                </GroupBox>

                            </StackPanel>

                            <FrameworkElement Height="8" />
                            <CheckBox Content="Active in Editor" IsChecked="{Binding ActiveInEditor}" />
                        </StackPanel>
                    </Border>
                </GroupBox>
            </StackPanel>
        </Grid>
    </Border>
</Window>