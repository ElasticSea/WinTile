<Window x:Class="App.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:App"
        xmlns:view="clr-namespace:App.View"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Icon="../../Resources/icon.png"
        Title="WinTile" Height="720" Width="1280"
        d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type=local:ViewModel}">

    <Window.Resources>
        <local:Multiplier x:Key="converter" />
        <view:TrueFalseConverter x:Key="TrueFalseConverter" />
        <view:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <ContextMenu x:Key="NotifierContextMenu" Placement="MousePoint">
            <MenuItem Header="Exit" Click="Menu_Exit" />
        </ContextMenu>
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>
        <x:Array Type="Brush" x:Key="selectedDeselectedBrushes">
            <Brush>Yellow</Brush>
            <Brush>Aqua</Brush>
        </x:Array>
        <x:Array Type="system:Int32" x:Key="5to0Thicknes">
            <system:Int32>5</system:Int32>
            <system:Int32>0</system:Int32>
        </x:Array>
        <x:Array Type="Visibility" x:Key="visibleHiddenArray">
            <Visibility>Visible</Visibility>
            <Visibility>Hidden</Visibility>
        </x:Array>
        <x:Array Type="Visibility" x:Key="hiddenVisibleArray">
            <Visibility>Hidden</Visibility>
            <Visibility>Visible</Visibility>
        </x:Array>

    </Window.Resources>

    <Border Padding="16">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="16" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>


            <GroupBox Grid.Column="0" Header="Tile Editor">
                <Border Padding="8">

                    <Grid>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="16" />
                            <RowDefinition Height="128" />
                            <RowDefinition Height="16" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <Border Grid.Row="0" BorderBrush="Black" BorderThickness="1">
                            <view:RelativeLayoutPanel x:Name="Canvas">
                                <view:RelativeLayoutPanel
                                    Visibility="{Binding Path=ActiveInEditor, Converter={StaticResource TrueFalseConverter},  ConverterParameter={StaticResource hiddenVisibleArray}}"
                                    view:RelativeLayoutPanel.RelativeX="0"
                                    view:RelativeLayoutPanel.RelativeY="0"
                                    view:RelativeLayoutPanel.RelativeWidth="1"
                                    view:RelativeLayoutPanel.RelativeHeight="1">
                                    <Border Background="DimGray"
                                            view:RelativeLayoutPanel.RelativeX="{Binding Selected.Rect.Left, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                            view:RelativeLayoutPanel.RelativeY="{Binding Selected.Rect.Top, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                            view:RelativeLayoutPanel.RelativeWidth="{Binding Selected.Rect.Width, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                            view:RelativeLayoutPanel.RelativeHeight="{Binding Selected.Rect.Height, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}">
                                        <TextBlock Foreground="White" HorizontalAlignment="Center"
                                                   SnapsToDevicePixels="True"
                                                   VerticalAlignment="Center" FontSize="45"
                                                   Text="{Binding SelectedIndex, Mode=OneWay}" />

                                    </Border>

                                    <!--                                view:RelativeLayoutPanel.RelativeY="{Binding Selected.Rect.Top, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"-->
                                    <!--                                X2="{Binding Selected.Rect.Left, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"-->


                                    <Line Stroke="Black" StrokeThickness="1" StrokeDashArray="4,4"
                                          view:RelativeLayoutPanel.RelativeY="{Binding Selected.Rect.Top, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                          view:RelativeLayoutPanel.RelativeWidth="{Binding Selected.Rect.Left, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                          view:RelativeLayoutPanel.RelativeHeight="1"
                                          X2="10000" />


                                    <Line Stroke="Black" StrokeThickness="1" StrokeDashArray="4,4"
                                          view:RelativeLayoutPanel.RelativeY="{Binding Selected.Rect.Bottom, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                          view:RelativeLayoutPanel.RelativeWidth="{Binding Selected.Rect.Left, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                          view:RelativeLayoutPanel.RelativeHeight="1"
                                          X2="10000" />


                                    <Line Stroke="Black" StrokeThickness="1" StrokeDashArray="4,4"
                                          view:RelativeLayoutPanel.RelativeX="{Binding Selected.Rect.Left, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                          view:RelativeLayoutPanel.RelativeWidth="1"
                                          view:RelativeLayoutPanel.RelativeHeight="{Binding Selected.Rect.Top, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                          Y2="10000" />

                                    <Line Stroke="Black" StrokeThickness="1" StrokeDashArray="4,4"
                                          view:RelativeLayoutPanel.RelativeX="{Binding Selected.Rect.Right, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                          view:RelativeLayoutPanel.RelativeWidth="1"
                                          view:RelativeLayoutPanel.RelativeHeight="{Binding Selected.Rect.Top, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                          Y2="10000" />

                                    <TextBlock Text="{Binding Selected.Rect.Left}"
                                               view:RelativeLayoutPanel.RelativeX="{Binding Selected.Rect.Left, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                               view:RelativeLayoutPanel.RelativeHeight="1"
                                               view:RelativeLayoutPanel.RelativeWidth="1" />

                                    <TextBlock Text="{Binding Selected.Rect.Right}"
                                               view:RelativeLayoutPanel.RelativeX="{Binding Selected.Rect.Right, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                               view:RelativeLayoutPanel.RelativeHeight="1"
                                               view:RelativeLayoutPanel.RelativeWidth="1" />

                                    <TextBlock Text="{Binding Selected.Rect.Top}"
                                               view:RelativeLayoutPanel.RelativeY="{Binding Selected.Rect.Top, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                               view:RelativeLayoutPanel.RelativeHeight="1"
                                               view:RelativeLayoutPanel.RelativeWidth="1" />

                                    <TextBlock Text="{Binding Selected.Rect.Bottom}"
                                               view:RelativeLayoutPanel.RelativeY="{Binding Selected.Rect.Bottom, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}"
                                               view:RelativeLayoutPanel.RelativeHeight="1"
                                               view:RelativeLayoutPanel.RelativeWidth="1" />

                                </view:RelativeLayoutPanel>

                                <ItemsControl
                                    Visibility="{Binding Path=ActiveInEditor, Converter={StaticResource TrueFalseConverter},  ConverterParameter={StaticResource visibleHiddenArray}}"
                                    view:RelativeLayoutPanel.RelativeX="0"
                                    view:RelativeLayoutPanel.RelativeY="0"
                                    view:RelativeLayoutPanel.RelativeWidth="1"
                                    view:RelativeLayoutPanel.RelativeHeight="1"
                                    ItemsSource="{Binding Windows}">
                                    <!--Use the ItemsPanel property to specify an ItemsPanelTemplate
      that defines the panel that is used to hold the generated items.
      In other words, use this property if you want to affect
      how the items are laid out.-->
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <view:RelativeLayoutPanel />
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <!--Use the ItemTemplate to set a DataTemplate to define
      the visualization of the data objects. This DataTemplate
      specifies that each data object appears with the Proriity
      and TaskName on top of a silver ellipse.-->
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Border
                                                Background="{Binding Bursh}"
                                                BorderThickness="{Binding Path=Selected, Converter={StaticResource TrueFalseConverter},  ConverterParameter={StaticResource 5to0Thicknes}}"
                                                BorderBrush="{Binding Path=Selected, Converter={StaticResource TrueFalseConverter},  ConverterParameter={StaticResource selectedDeselectedBrushes}}">
                                                <TextBlock Text="" Foreground="White" VerticalAlignment="Center"
                                                           HorizontalAlignment="Center" FontSize="45">
                                                    <Run Text="{Binding Rect.Width}" />
                                                    <Run Text="x" />
                                                    <Run Text="{Binding Rect.Height}" />
                                                    <Run Text="{Binding Rect.Left}" />
                                                    <Run Text="{Binding Rect.Right}" />
                                                    <Run Text="{Binding Rect.Bottom}" />
                                                    <Run Text="{Binding Rect.Top}" />
                                                </TextBlock>
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                    <!--Use the ItemContainerStyle property to specify the appearance
      of the element that contains the data. This ItemContainerStyle
      gives each item container a margin and a width. There is also
      a trigger that sets a tooltip that shows the description of
      the data object when the mouse hovers over the item container.-->
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="ContentPresenter">
                                            <Setter Property="view:RelativeLayoutPanel.RelativeX"
                                                    Value="{Binding Rect.Left, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}" />
                                            <Setter Property="view:RelativeLayoutPanel.RelativeY"
                                                    Value="{Binding Rect.Top, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}" />
                                            <Setter Property="view:RelativeLayoutPanel.RelativeWidth"
                                                    Value="{Binding Rect.Width, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}" />
                                            <Setter Property="view:RelativeLayoutPanel.RelativeHeight"
                                                    Value="{Binding Rect.Height, Mode=OneWay, Converter={StaticResource converter}, ConverterParameter='0.01'}" />
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                </ItemsControl>
                            </view:RelativeLayoutPanel>
                        </Border>
                        <FrameworkElement Grid.Row="1" />
                        <ListView Name="ListView" Grid.Row="2" MaxWidth="600" SelectedItem="{Binding Selected}"
                                  SelectedIndex="{Binding SelectedIndex, Mode=OneWayToSource}"
                                  SelectionMode="Single"
                                  IsSynchronizedWithCurrentItem="True"
                                  ItemsSource="{Binding Tiles}">

                            <ListView.View>
                                <GridView>
                                    <GridView.Columns>

                                        <GridViewColumn Header="Left" Width="50">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Rect.Left}" TextAlignment="Right" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="Right" Width="50">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Rect.Right}" TextAlignment="Right" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="Top" Width="50">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Rect.Top}" TextAlignment="Right" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>

                                        <GridViewColumn Header="Bottom" Width="50">
                                            <GridViewColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock Text="{Binding Path=Rect.Bottom}" TextAlignment="Right" />
                                                </DataTemplate>
                                            </GridViewColumn.CellTemplate>
                                        </GridViewColumn>
                                    </GridView.Columns>
                                </GridView>
                            </ListView.View>
                        </ListView>

                        <FrameworkElement Grid.Row="3" />
                        <StackPanel Grid.Row="4" MaxWidth="600">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <StackPanel Grid.Column="0">
                                    <TextBlock Text="Left" />
                                    <TextBox x:Name="XTextBox" Padding="2">
                                        <Binding Path="Selected.Rect.Left" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <local:IntegerValidationRule Min="0" Max="100" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                </StackPanel>
                                <FrameworkElement Grid.Column="1" />

                                <StackPanel Grid.Column="2">
                                    <TextBlock Text="Top" />
                                    <TextBox x:Name="YTextBox" Padding="2">
                                        <Binding Path="Selected.Rect.Top" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <local:IntegerValidationRule Min="0" Max="100" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                </StackPanel>
                                <FrameworkElement Grid.Column="3" />

                                <StackPanel Grid.Column="4">
                                    <TextBlock Text="Right" />
                                    <TextBox x:Name="WidthTextBox" Padding="2">
                                        <Binding Path="Selected.Rect.Right" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <local:IntegerValidationRule Min="0" Max="100" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                </StackPanel>
                                <FrameworkElement Grid.Column="5" />

                                <StackPanel Grid.Column="6">
                                    <TextBlock Text="Bottom" />
                                    <TextBox x:Name="HeightTextBox" Padding="2">
                                        <Binding Path="Selected.Rect.Bottom" UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <local:IntegerValidationRule Min="0" Max="100" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox>
                                </StackPanel>

                            </Grid>

                            <FrameworkElement Height="16" />

                            <Grid>

                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="16" />
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>

                                <Button Grid.Column="0" x:Name="AddWindowButton" Click="AddWindowButton_OnClick"
                                        Content="Add" />
                                <FrameworkElement Grid.Column="1" />
                                <Button Grid.Column="2" x:Name="RemoveWindowButton" Click="RemoveWindowButton_OnClick"
                                        Content="Remove" />
                                <FrameworkElement Grid.Column="3" />
                                <FrameworkElement Grid.Column="4" />
                                <FrameworkElement Grid.Column="5" />
                                <FrameworkElement Grid.Column="6" />
                            </Grid>
                        </StackPanel>
                    </Grid>

                </Border>
            </GroupBox>
            <FrameworkElement Grid.Column="1" />

            <StackPanel Grid.Column="2" Width="400">
                <GroupBox Header="Layout">
                    <Border Padding="8">
                        <Grid Margin="-1,0,1,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="16" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" x:Name="ExportButton" Content="Export" Click="ExportButton_OnClick" />
                            <FrameworkElement Grid.Column="1" />
                            <Button Grid.Column="2" x:Name="ImportButton" Content="Import" Click="ImportButton_OnClick" />
                            <FrameworkElement Grid.Column="3" />
                            <Button Grid.Column="4" x:Name="SaveLayoutButton" Click="SaveLayoutButton_OnClick"
                                    Content="Save" />
                            <FrameworkElement Grid.Column="5" />
                            <Button Grid.Column="6" x:Name="ResetLayoutButton" Click="ResetLayoutButton_OnClick"
                                    Content="Reset" />
                        </Grid>
                    </Border>
                </GroupBox>

                <GroupBox Header="Hotkeys">
                    <Border Padding="8">

                        <StackPanel>
                            <ListView ItemsSource="{Binding Hotkeys}" Height="300"
                                      SelectedItem="{Binding SelectedHotkeyPair, Mode=OneWayToSource}"
                                      IsEnabled="{Binding ActiveInEditor, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}"
                                      SelectionMode="Single"
                                      IsSynchronizedWithCurrentItem="True">
                                <ListView.View>
                                    <GridView>
                                        <GridView.Columns>
                                            <GridViewColumn Header="Hotkey" Width="100"
                                                            DisplayMemberBinding="{Binding Path=Type}" />
                                            <GridViewColumn Header="Action" Width="200"
                                                            DisplayMemberBinding="{Binding Path=Hotkey}" />
                                        </GridView.Columns>
                                    </GridView>
                                </ListView.View>
                            </ListView>

                            <GroupBox Header="Add Hotkey"
                                      IsEnabled="{Binding ActiveInEditor, Mode=OneWay, Converter={StaticResource InverseBooleanConverter}}">
                                <Border Padding="8">
                                    <StackPanel>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="16" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <StackPanel Grid.Column="0">
                                                <TextBlock Text="Name" />
                                                <ComboBox ItemsSource="{Binding HotkeyTypes, Mode=OneWay}"
                                                          IsSynchronizedWithCurrentItem="True"
                                                          SelectedItem="{Binding AddHotkeyType, Mode=OneWayToSource}"
                                                          Padding="2" />
                                            </StackPanel>
                                            <FrameworkElement Grid.Column="1" />
                                            <StackPanel Grid.Column="2">
                                                <TextBlock Text="Hotkey" />
                                                <TextBox x:Name="HotkeyKey"
                                                         PreviewKeyDown="Hotkey_OnPreviewKeyDown"
                                                         Text="{Binding AddHotkeyHotkey, Mode=OneWay}"
                                                         Padding="2" IsReadOnly="True" />
                                            </StackPanel>
                                        </Grid>

                                        <FrameworkElement Height="16" />
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="16" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Button Grid.Column="0" x:Name="AddHotkeyButton" Content="Add"
                                                    Click="AddHotkeyButton_OnClick" />
                                            <FrameworkElement Grid.Column="1" />
                                            <Button Grid.Column="2" x:Name="RemoveHotkeyButton" Content="Remove"
                                                    Click="RemoveHotkeyButton_OnClick" />
                                        </Grid>
                                    </StackPanel>
                                </Border>
                            </GroupBox>

                            <FrameworkElement Height="8" />
                            <CheckBox Content="Active in Editor" IsChecked="{Binding ActiveInEditor}" />
                        </StackPanel>
                    </Border>
                </GroupBox>
            </StackPanel>
        </Grid>
    </Border>
</Window>